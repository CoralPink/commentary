name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cache-media-files:
    name: Cache Media Files
    runs-on: macos-15
    if: ${{ github.ref == 'refs/heads/main' }}
    outputs:
      media-cache-key: ${{ steps.set-cache-key.outputs.cache-key }}
      cache-hit-exact: ${{ steps.check-cache.outputs.exact }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          lfs: false
          fetch-depth: 0
          sparse-checkout: |
            src

      - name: Set Cache Key
        id: set-cache-key
        run: |
          echo "cache-key=media-${{ hashFiles('src/**/*.webp', 'src/**/*.webm', 'src/**/*.mp3') }}" >> $GITHUB_OUTPUT

      - name: Restore Media Cache (allow partial match)
        id: cache-source
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: tmp-media
          key: ${{ steps.set-cache-key.outputs.cache-key }}
          restore-keys: media-

      - name: Check if cache is exact match
        id: check-cache
        run: |
          if [ "${{ steps.cache-source.outputs.cache-hit }}" = "true" ] && \
             [ "${{ steps.cache-source.outputs.cache-matched-key }}" = "${{ steps.set-cache-key.outputs.cache-key }}" ]; then
            echo "exact=true" >> $GITHUB_OUTPUT
          else
            echo "exact=false" >> $GITHUB_OUTPUT
          fi

      - name: Pull missing LFS files (on partial or miss)
        if: steps.check-cache.outputs.exact != 'true'
        run: |
          git lfs pull --include="src/**/*.webp,src/**/*.webm,src/**/*.mp3"
      - name: Synchronize Media Files
        if: steps.check-cache.outputs.exact != 'true'
        run: |
          rm -rf tmp-media
          mkdir -p tmp-media
          rsync -a --delete \
            --include='*/' \
            --include='*.webp' \
            --include='*.webm' \
            --include='*.mp3' \
            --exclude='*' \
            src/ tmp-media

      - name: Save Media Cache (new primary key)
        if: steps.check-cache.outputs.exact != 'true'
        uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: tmp-media
          key: ${{ steps.set-cache-key.outputs.cache-key }}

  test-wasm:
    name: Test Wasm
    runs-on: macos-15
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            rs/wasm

      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: wasm-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Cargo
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: |
          cargo install wasm-bindgen-cli
          cargo install wasm-pack

      - name: Test Wasm
        working-directory: rs/wasm
        run: |
          wasm-pack test --headless --chrome

  build-wasm:
    name: Build Wasm
    runs-on: macos-15
    needs: test-wasm
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            rs/wasm

      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: wasm-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Cargo
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: |
          cargo install wasm-bindgen-cli
          cargo install wasm-pack

      - name: Build Wasm
        working-directory: rs/wasm
        run: |
          wasm-pack build --target web

      - name: Install Binaryen
        run: |
          brew install binaryen

      - name: Optimization Wasm
        working-directory: rs/wasm
        run: |
          wasm-opt ./pkg/wasm_book_bg.wasm \
            -o ./pkg/wasm_book_bg.wasm \
            -O \
            --enable-nontrapping-float-to-int \
            --enable-bulk-memory

      - name: Upload wasm_pkg
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: wasm-book
          path: rs/wasm/pkg
          if-no-files-found: error

  test-js:
    name: Test JS
    runs-on: macos-15
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            js

      - name: Cache dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.bun/install/cache
            js/node_modules
          key: js-${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: ".bun-version"

      - name: Install
        working-directory: js
        run: |
          bun install

      - name: Run Vitest
        working-directory: js
        run: |
          bun vitest run

  build-js:
    name: Build JS
    runs-on: macos-15
    needs: [test-js, build-wasm]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            js

      - name: Cache dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.bun/install/cache
            js/node_modules
          key: js-${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}

      - name: Download wasm_pkg
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: wasm-book
          path: pkg

      - name: Copy wasm_js
        run: |
          cp pkg/wasm_book.js js
          cp pkg/wasm_book.d.ts js

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: ".bun-version"

      - name: Install
        working-directory: js
        run: |
          bun install
          bun create-highlight.bun.sh

      - name: Build
        working-directory: js
        run: |
          bun run build.js

      - name: Upload JS
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-js
          path: js/dist
          if-no-files-found: error

  build-scss:
    name: Build SCSS
    runs-on: macos-15
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            scss
            scss/catppuccin

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: ".bun-version"

      - name: Build SCSS
        working-directory: scss
        run: |
          bun install --production
          bun run build.js

      - name: Upload CSS
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: css
          path: scss/dist
          if-no-files-found: error

  convert-woff2:
    name: Convert WOFF2
    runs-on: macos-15
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            fonts

      - name: Cache Woff2 output
        id: cache-woff2
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: fonts/woff2
          key: python-${{ runner.os }}-fonts-${{ hashFiles('fonts/**') }}

      - name: Setup Uv
        if: steps.cache-woff2.outputs.cache-hit != 'true'
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
        with:
          version: "0.8.x"

      - name: Convert and Copy Woff2
        if: steps.cache-woff2.outputs.cache-hit != 'true'
        working-directory: fonts
        run: |
          mkdir -p woff2
          uv run convert.py NerdFontsSymbolsOnly/SymbolsNerdFontMono-Regular.ttf woff2
          uv run convert.py Open_Sans/static/OpenSans-BoldItalic.ttf woff2
          uv run convert.py Open_Sans/static/OpenSans-Italic.ttf woff2
          cp "Fira Code/FiraCode-VF.woff2" woff2

      - name: Upload font artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: woff2
          path: fonts/woff2
          if-no-files-found: error

  test-mdbook-backend:
    name: Test mdBook Backend
    runs-on: macos-15
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          sparse-checkout: |
            rs/mdbook-footnote

      - name: Cache Cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: test-backend-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Test Cargo (mdbook-footnote)
        working-directory: rs/mdbook-footnote
        run: |
          cargo test --verbose

  publish:
    name: Publish
    runs-on: macos-15
    needs: [build-wasm, build-js, build-scss, cache-media-files, convert-woff2, test-mdbook-backend]
    env:
      MDBOOK_VERSION: 0.4.52
    steps:
      - name: Checkout the repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          lfs: false # Make it clear (just in case) that lfs is not used in this step.
          fetch-depth: 0
          sparse-checkout: |
            book.toml
            rs/mdbook-footnote
            scripts
            src
            theme

      - name: Restore Media Cache
        id: cache-media
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: tmp-media
          key: ${{ needs.cache-media-files.outputs.media-cache-key }}
          fail-on-cache-miss: true

      - name: Remove LFS Pointer
        run: find src -type f \( -name '*.webp' -o -name '*.webm' -o -name '*.mp3' \) -delete

      - name: Copy Cached Media Back
        run: |
          rsync -a tmp-media/ src/
          rm -rf tmp-media

      - name: Download All Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          path: artifacts

      - name: Copy Files
        run: |
          cp artifacts/wasm-book/wasm_book_bg.wasm src
          cp artifacts/build-js/* src
          cp -r artifacts/woff2 src
          cp -r artifacts/css src

      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: backend-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install mdbook
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: |
          cargo install --version ${MDBOOK_VERSION} mdbook
          cargo install mdbook-admonish
          cargo install mdbook-tailor
          cargo install --path ./rs/mdbook-footnote

      - name: Setup Pages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Build Book
        run: |
          mdbook build

      - name: Generate Page List
        working-directory: book
        run: |
          ../scripts/generate-pagelist.sh

      - name: Generate Search Index
        working-directory: book
        run: |
          node ../scripts/extract-json.js

      - name: Compress Search Index
        working-directory: book
        run: |
          brotli searchindex.json
          gzip --best --keep --no-name searchindex.json

      - name: Remove Unneeded Files
        working-directory: book
        run: |
          rm ayu-highlight.css
          rm clipboard.min.js
          rm elasticlunr.min.js
          rm favicon.png
          rm fonts.css
          rm highlight.css
          rm highlight.js
          rm mark.min.js
          rm searcher.js
          rm searchindex.js
          rm searchindex.json
          rm toc.html
          rm toc.js
          rm tomorrow-night.css
          rm css/chrome.css
          rm css/variables.css
          rm -rf FontAwesome
          rm -rf fonts

      - name: Upload Pages Artifact
        id: deployment
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4
        with:
          path: book

  deploy:
    name: Deploy
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
