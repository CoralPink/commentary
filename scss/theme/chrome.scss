@use '../variables' as var;

.page {
  // For the style attribute, display: grid or block is added from the JS code.
  // (Specify an initial value to prevent layout shift on PC.)
  @media only screen and (min-width: var.$mobile-max-width) {
    display: grid;
  }

  grid-template-columns: var.$sidebar-width 1fr;
  min-height: calc(100dvh - var.$menu-bar-height);
}

.content {
  display: grid;
  grid-template-columns: 1rem 1fr 1rem;
  column-gap: 1rem;

  @media only screen and (min-width: var.$enable-pagetoc) {
    grid-template-columns: 1rem 1fr 0 var.$pagetoc-width 0;
  }

  main {
    font-size: 0.9rem;
    min-width: 0;
    word-break: auto-phrase;
  }

  a {
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }

  mark {
    cursor: pointer;
  }

  img,
  video {
    display: flex;
    margin: 1rem auto;
    border-radius: 0.4rem;
    max-width: 100%;
    height: auto;
  }

  .header {
    &:link {
      color: var(--fg);
      text-decoration: none;
    }
    &:visited {
      color: var(--fg);
    }
    &:visited:hover {
      text-decoration: none;
    }
  }
}

.tooltiptext {
  position: absolute;
  visibility: hidden;
  color: #fff;
  background-color: #333;
  left: -1.8em;
  top: -3.5em;
  width: 4em;
  height: 1em;
  text-align: center;
  border-radius: 0.8rem;
  padding: 0.4em 0.8em;
  margin: 0.4em;

  .tooltipped & {
    visibility: visible;
  }
}

.result-no-output {
  font-style: italic;
}

#searchresults a,
.content main a:link,
a:visited {
  color: var(--links);
}

.top-bar {
  flex-basis: var.$menu-bar-height;

  .menu-bar {
    position: fixed;
    width: 100dvw;
    height: var.$menu-bar-height;

    display: flex;
    align-items: center;
    -webkit-align-items: center;
    gap: 1em;

    background-color: var(--bg);
    z-index: 101;
    opacity: 0.92;

    font-size: 1.1em;

    i,
    .icon-button {
      cursor: pointer;
    }

    &,
    &:visited,
    & .icon-button,
    & a i {
      color: var(--icons);
    }

    & i:hover,
    & .icon-button:hover {
      color: var(--icons-hover);
    }
  }

  .icon-button {
    border: none;
    background: none;
    color: inherit;
  }

  .left-buttons {
    margin-left: 1rem;

    display: flex;
    gap: 0.85em;
  }

  .menu-title {
    font-size: 0.6em;
    font-style: italic;
    text-align: right;
    flex: 1;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .right-buttons {
    margin-right: 1.3rem;

    a {
      text-decoration: none;
    }
  }
}

.nav-wrapper {
  display: flex;
  justify-content: space-between;
  margin-bottom: 2em;
}

.nav-chapters {
  font-size: 1.5em;
  text-align: center;
  text-decoration: none;
  width: 6rem;
  border-radius: 0.8rem;
  background-color: var(--sidebar-bg);

  &:visited {
    color: var(--icons);
  }
  i:hover {
    color: var(--icons-hover);
  }
}

#searchbar {
  min-width: 10rem;
  height: 1.4rem;
  margin: 0.5rem 0.25rem;
  padding: 0.5rem 1rem;
  border: 0.1rem solid var(--searchbar-border-color);
  border-radius: 1em;
  background-color: var(--searchbar-bg);
  color: var(--searchbar-fg);
}

#searchresults a {
  text-decoration: none;
}

.search-wrapper {
  flex-basis: 60%;
}

.searchresults-header {
  font-weight: bold;
  padding: 1rem 0 0 0.3rem;
  color: var(--searchresults-header-fg);
}

.searchresults-outer {
  width: 84dvw;
  max-height: 88dvh;
  overflow-y: scroll;

  font-size: 0.9em;
  position: absolute;

  color: var(--fg);
  background: var(--bg);

  left: 50%;
  transform: translate(-50%);

  padding: 0.8em;

  border: 0.1em solid var(--searchbar-border-color);
  border-radius: 1.6em;

  ul {
    list-style: none;
    padding-left: 0.4rem;

    li {
      font-size: 0.9em;
      padding: 0.5rem;

      &.focus {
        background-color: var(--searchresults-li-bg);
      }
    }
    span {
      &.teaser {
        display: block;
        clear: both;
        margin: 0.4rem 0 0 1.25rem;
        font-size: 0.8em;

        em {
          background: linear-gradient(rgba(0, 0, 0, 0) 80%, var(--search-mark-bg));
          font-weight: bold;
        }
      }
    }
  }
}

.sidebar {
  visibility: hidden;  // Initially, it is hidden.

  color: var(--sidebar-fg);
  background-color: var(--sidebar-bg);

  scrollbar-color: var(--scrollbar) var(--bg);

  ::-webkit-scrollbar {
    width: var.$scrollbar-width;
  }

  ::-webkit-scrollbar-thumb {
    background: var(--scrollbar);
    border-radius: 1rem;
  }
}

.sidebar-scrollbox {
  position: fixed;
  top: var.$menu-bar-height;
  bottom: 0;
  width: var.$sidebar-width;
  overflow-y: scroll;
}

.chapter {
  margin-bottom: 2em;
  padding-left: 1em;
  line-height: 2.2em;
  font-size: 0.7em;
  font-style: italic;

  li {
    list-style-type: none;

    .part-title {
      color: var(--sidebar-fg);
      margin: 4rem 0;
      font-weight: bold;
    }

    a {
      display: block;
      color: var(--sidebar-fg);
      text-decoration: none;

      &:hover {
        color: var(--sidebar-active);
      }
      &.active {
        color: var(--sidebar-active);
        font-weight: bold;
      }
    }

    &.part-title {
      color: var(--sidebar-fg);
      margin: 1.2rem auto 0.2rem;
      font-weight: bold;
      background-image: linear-gradient(to right, var.$color_pink 50%, var(--bg));
      background-repeat: no-repeat;
      background-size: 100% 0.1rem;
      background-position: bottom;
    }
  }
}

.section {
  padding-left: 0.5rem;
}

.theme-popup {
  position: absolute;
  top: var.$menu-bar-height;
  left: 2.4rem;
  border-radius: 0.4rem;
  font-size: 0.4em;
  color: var(--fg);
  background: var(--theme-popup-bg);
  border: 0.1rem solid var(--theme-popup-border);
  list-style-type: none;
  margin: 0;
  padding: 0.4rem;
  display: none;
  overflow: hidden;

  .default {
    color: var(--icons);
  }
  .theme {
    width: 100%;
    border: 0;
    margin: 0;
    padding: 0.2rem 1.25rem;
    line-height: 1.5rem;
    white-space: nowrap;
    text-align: left;
    cursor: pointer;
    color: inherit;
    background: inherit;
    font-size: inherit;

    &:hover {
      background-color: var(--theme-hover);
    }
  }
}
.theme-selected::before {
  $theme-width: 1rem;

  display: inline-block;
  content: 'âœ“';
  margin-left: 0 - $theme-width;
  width: $theme-width;
}
